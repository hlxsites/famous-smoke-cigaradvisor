version: 1
indices:
  default:
    include:
      - /**
    exclude:
      - '**/drafts/**'
      - '**/images/**'
      - '**/icons/**'
      - '/**/footer'
      - '/**/nav'
      - '/**/404'
    target: /cigaradvisor/query-index.json
    properties:
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "https:\/\/[^/]+(/.*)")
      description:
        select: head > meta[name="description"]
        value: attribute(el, "content")
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
  articles:
    include:
      - /cigaradvisor/posts/**
    target: /cigaradvisor/posts/query-index.json
    properties:
      title:
        select: head > meta[property="og:title"]
        value: attribute(el, "content")
      author:
        select: head > meta[name="author"]
        value: match(attribute(el, "content"), "(?:https:\/\/[^/]+)?(.+)")
      published:
        select: head > meta[name="publisheddate"]
        value: parseTimestamp(attribute(el, "content"), "ddd, DD MMM YYYY hh:mm:ss GMT")
      readingTime:
        select: head > meta[name="readingtime"]
        value: attribute(el, "content")
      image:
        select: head > meta[property="og:image"]
        value: match(attribute(el, "content"), "(?:https:\/\/[^/]+)?(.+)")
      description:
        select: head > meta[property="og:description"]
        value: attribute(el, "content")
      articleBlurb:
        select: head > meta[name="articleBlurb"]
        value: attribute(el, "content")
      category:
        select: head > meta[name="category"]
        value: match(attribute(el, "content"), "(?:https:\/\/[^/]+)?(.+)")
  authors:
    include:
      - /cigaradvisor/author/**
    target: /cigaradvisor/author/query-index.json
    properties:
      title:
        select: head > title
        value: textContent(el)
      description:
        select: head > meta[property="og:description"]
        value: attribute(el, "content")
      name:
        select: .block.author-detail h2.author-name
        value: textContent(el)
      author-title:
        select: .block.author-detail p.author-title
        value: textContent(el)
      intro:
        select: .block.author-detail div.author-intro > p
        value: textContent(el)
      image:
        select: .block.author-detail div.author-image > picture > img
        value: match(attribute(el, 'src'), "(?:https:\/\/[^/]+)?(.+)")
      twitter:
        select: .block.author-detail div.social-links > ul > li > a
        value: match(attribute(el, 'href'), '^https?:\/\/(?:www\.)?twitter\.com\/(?:#!\/)?@?([^/?#]*)\/?(?:[?#].*)?$')
      facebook:
        select: .block.author-detail div.social-links > ul > li > a
        value: match(attribute(el, 'href'), '^https?:\/\/(?:www\.)?facebook\.com\/(?:#!\/)?@?([^/?#]*)\/?(?:[?#].*)?$')
      instagram:
        select: .block.author-detail div.social-links > ul > li > a
        value: match(attribute(el, 'href'), '^https?:\/\/(?:www\.)?instagram\.com\/(?:#!\/)?@?([^/?#]*)\/?(?:[?#].*)?$')
      youtube:
        select: .block.author-detail div.social-links > ul > li > a
        value: match(attribute(el, 'href'), '^https?:\/\/(?:www\.)?youtube\.com\/user\/(?:#!\/)?@?([^/?#]*)\/?(?:[?#].*)?$')
